setwd("~/ST558_Git/_RMD")
setwd("~/ST558_Git")
install.packages("datatable")
rmarkdown::render("/Users/EvanBrown/Desktop/ST558/ecbrown7.github.io/_Rmd/2022-06-25-evanbrown-project1-blog-post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(
html_preview = FALSE
)
)
rmarkdown::render("/Users/EvanBrown/Desktop/ST558/ecbrown7.github.io/_Rmd/2022-06-25-evanbrown-project1-blog-post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(
html_preview = FALSE
)
)
rmarkdown::render("/Users/EvanBrown/Desktop/ST558/ecbrown7.github.io/_Rmd/2022-06-25-evanbrown-project1-blog-post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(
html_preview = FALSE
)
)
tcpl::chdat
data <- data.table(x = 1:10, y = rnorm(10))
install.packages(data.table)
install.packages("data.table")
install.packages("data.table")
library(data.table)
data <- data.table(x = 1:10, y = rnorm(10))
View(data)
data <- data.table(x = 1:10, y = sample(1:100, 10))
View(data)
#Create test dataset with 5 random observations
data <- data.table(x = 1:5, y = sample(1:100, 5)
#Create test dataset with 5 random observations
data <- data.table(x = 1:5, y = sample(1:100, 5))
#Create test data set with 5 random observations
data <- data.table(x = 1:5, y = sample(1:100, 5))
View(data)
#Create test data set with 5 random observations tow ork from
data <- data.table(x = rep(1:5, by = 5), y = sample(1:100, 25))
View(data)
for(i in 1:ncol(data)){
print(ggplot(data, aes(x = x, y = data[,i])) +
geom_point())
}
library(tidyverse)
library(tidyverse)
for(i in 1:ncol(data)){
print(ggplot(data, aes(x = x, y = data[,i])) +
geom_point())
}
for(i in 1:ncol(data)){
print(ggplot(data, aes(x = x, y = DT[,i])) +
geom_point())
}
# Create test data set with 5 random observations tow ork from
data <- data.frame(x = rep(1:5, by = 5), y = sample(1:100, 25))
for(i in 1:ncol(data)){
print(ggplot(data, aes(x = x, y = data[,i])) +
geom_point())
}
for(i in 1:ncol(data)){
print(ggplot(data, aes(x = data[1,], y = y)) +
geom_point())
}
for(i in 1:ncol(data)){
print(ggplot(data, aes(x = x, y = y)) +
geom_point())
}
# Create test data set with 5 random observations tow ork from
testchems <- c("Control", "Chem1", "Chem2")
# Create test data set with 5 random observations tow ork from
testchems <- c(rep("Control",3), rep("Chem1",3), rep("Chem2",3))
response <- c(6.6, 6.8, 7.1, 8.2, 9.3, 7.9, 10.2, 12.1, 11.8)
sampledata <- cbind(testchems, response)
View(sampledata)
# Insert generic plot from excel
![](/Users/EvanBrown/Desktop/Screen Shot 2022-06-29 at 7.46.18 PM.png)
sampleplot <- ggplot(sampledata, aes(x=testchems, y=response)) +
geom_bar(aes(fill = testchems)) +
labs(x = "Test Chemical", y= "Response") +
ggtitle("Sample Data in R")
sampledata <- data.frame(cbind(testchems, response))
sampleplot <- ggplot(sampledata, aes(x=testchems, y=response)) +
geom_bar(aes(fill = testchems)) +
labs(x = "Test Chemical", y= "Response") +
ggtitle("Sample Data in R")
#Display plot
sampleplot
sampleplot <- ggplot(sampledata, aes(x=testchems, y=response))
#Display plot
sampleplot
sampleplot <- ggplot(sampledata, aes(x=testchems, y=response)) +
geom_bar(aes(fill = testchems)) +
labs(y= "Response") +
ggtitle("Sample Data in R")
#Display plot
sampleplot
sampleplot <- ggplot(sampledata, aes(x=testchems)) +
geom_bar(aes(fill = testchems)) +
labs(y= "Response") +
ggtitle("Sample Data in R")
#Display plot
sampleplot
#Lets graph the mean of each
sampledata$mean <- sampledata %>% group_by(testchems) %>% mean = mean(response)
#Lets graph the mean of each
sampledata %>% group_by(testchems) %>% mean = mean(response)
#Lets graph the mean of each
sampledata$mean <- sampledata %>% group_by(testchems) %>% mean(response)
sampledata <- data.frame(cbind(testchems, response))
str(data.frame)
str(data.frame)
str(sampledata)
sampledata <- data.frame(cbind(testchems, as.numeric(response))
sampledata <- data.frame(cbind(testchems, as.numeric(response)))
sampledata <- data.frame(cbind(testchems, as.numeric(response)))
sampleplot <- ggplot(sampledata, aes(x=testchems, y = response)) +
geom_bar(aes(fill = testchems)) +
labs(y= "Response") +
ggtitle("Sample Data in R")
#Display plot
sampleplot
#Look at sample data
sampledata
sampledata <- data.frame(cbind(testchems, as.numeric(response)))
sampledata <- data.frame(cbind(testchems, as.numeric(response)))
str(sampledata)
sampledata <- data.frame(testchems, response)
str(sampledata)
sampleplot <- ggplot(sampledata, aes(x=testchems, y = response)) +
geom_bar(aes(fill = testchems)) +
labs(y= "Response") +
ggtitle("Sample Data in R")
#Display plot
sampleplot
#Lets graph the mean of each
sampledata$mean <- sampledata %>% group_by(testchems) %>% mean(response)
#Lets graph the mean of each
mean(sampledata$response)
sampledata %>% group_by(testchems) %>% mean(sampledata$response)
sampleplot <- ggplot(sampledata, aes(x=testchems, y = response)) +
geom_bar(y=response, aes(fill = testchems)) +
labs(y= "Response") +
ggtitle("Sample Data in R")
sampleplot <- ggplot(sampledata, aes(x=testchems, y = response)) +
geom_bar(y=response, aes(fill = testchems)) +
labs(y= "Response") +
ggtitle("Sample Data in R")
#Display plot
sampleplot
cerealdata <- read.csv("cereal.csv")
cerealdata <- read.csv("/Users/EvanBrown/Desktop/ST558/cereal.csv")
View(cerealdata)
#Inspect data
head(cerealdata)
cerealdata <- read.csv("/Users/EvanBrown/Desktop/ST558/cereal.csv")
#Inspect data
head(cerealdata)
#Investigate relationship between grams of sugar as a predictor and rating as a response by plotting a scatter plot
sugarplot <- ggplot(cerealdata, aes(x=cerealdata$sugars, y=cerealdata$rating)) +
geom_point(aes(fill = cerealdata$name)) + geom_smooth(method = lm, color = "blue") +
labs(x = "Sugar (g)", y = "Rating") +
ggtitle("Cereal Ratings vs Sugars")
#Display plot
sugarplot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point(aes(fill = name)) + geom_smooth(method = lm, color = "blue") +
labs(x = "Sugar (g)", y = "Rating") +
ggtitle("Cereal Ratings vs Sugars")
#Display plot
sugarplot
#Read in data
cerealdata <- read.csv("/Users/EvanBrown/Desktop/ST558/cereal.csv")
cerealdata <- data.frame(cerealdata)
#Inspect data
head(cerealdata)
#Investigate relationship between grams of sugar as a predictor and rating as a response by plotting a scatter plot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point(aes(fill = name)) + geom_smooth(method = lm, color = "blue") +
labs(x = "Sugar (g)", y = "Rating") +
ggtitle("Cereal Ratings vs Sugars")
#Display plot
sugarplot
View(cerealdata)
cerealdata <- as_tibble(cerealdata)
#Inspect data
head(cerealdata)
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "blue") +
labs(x = "Sugar (g)", y = "Rating") +
ggtitle("Cereal Ratings vs Sugars")
#Display plot
sugarplot
View(cerealdata)
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "013f28") +
labs(x = "Sugar (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Sugars")
#Display plot
sugarplot
cerealdata <- read.csv("/Users/EvanBrown/Desktop/ST558/cereal.csv")
#Inspect data
head(cerealdata)
#Investigate relationship between grams of sugar as a predictor and rating as a response by plotting a scatter plot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "013f28") +
labs(x = "Sugar (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Sugars")
#Display plot
sugarplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "013f28") +
labs(x = "Sugar (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Sugars")
#Display plot
proteinplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "light orange") +
labs(x = "Protein (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Protein")
#Display plot
proteinplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "0072B2") +
labs(x = "Protein (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Protein")
#Display plot
proteinplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#0072B2") +
labs(x = "Protein (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Protein")
#Display plot
proteinplot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#013f28") +
labs(x = "Sugar (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Sugars")
#Display plot
sugarplot
cerealdata <- read.csv("/Users/EvanBrown/Desktop/ST558/cereal.csv")
#Inspect data
head(cerealdata)
#Investigate relationship between grams of sugar as a predictor and rating as a response by plotting a scatter plot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#013f28") + theme_bw() +
labs(x = "Sugar (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Sugars")
#Display plot
sugarplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#0072B2") + theme_bw() +
labs(x = "Protein (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Protein")
#Display plot
proteinplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#0072B2") + theme_light() +
labs(x = "Protein (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Protein")
#Display plot
proteinplot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#013f28") + theme_bw() + #Set to black and white theme
labs(x = "Sugar (g)", y = "Health Rating", title = "Cereal Health Ratings vs Sugars",
subtitle = "Scatterplot of the results") #Controlling labels and titles
#Display plot
sugarplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#0072B2") + theme_light() + #Set to light theme
labs(x = "Protein (g)", y = "Health Rating", subtitle = "Scatterplot of the results") +
ggtitle("Cereal Health Ratings vs Protein")
#Display plot
proteinplot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point(aes(color = name)) + geom_smooth(method = lm, color = "#013f28") + #Setting custom line color
theme_bw() + #Set to black and white theme
labs(x = "Sugar (g)", y = "Health Rating", title = "Cereal Health Ratings vs Sugars",
subtitle = "Scatterplot of the results") #Controlling labels and titles
#Display plot
sugarplot
sugarplot <- ggplot(cerealdata, aes(x=sugars, y=rating)) +
geom_point(aes(color = name)) + geom_smooth(method = lm, color = "#013f28") + #Setting custom line color, point colors to cereal name
theme_bw() + #Set to black and white theme
theme(legend.position="none") + #Removing legend
labs(x = "Sugar (g)", y = "Health Rating", title = "Cereal Health Ratings vs Sugars",
subtitle = "Scatterplot of the results") #Controlling labels and titles
#Display plot
sugarplot
proteinplot <- ggplot(cerealdata, aes(x=protein, y=rating)) +
geom_point() + geom_smooth(method = lm, color = "#0072B2") + #Setting custom line color
theme_light() + #Set to light theme
labs(x = "Protein (g)", y = "Health Rating") +
ggtitle("Cereal Health Ratings vs Protein") #Controlling title differently
#Display plot
proteinplot
rmarkdown::render("/Users/EvanBrown/Desktop/ST558/ecbrown7.github.io/_Rmd/2022-06-29-evanbrown-third-blog-post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(
html_preview = FALSE
)
)
rmarkdown::render("/Users/EvanBrown/Desktop/ST558/ecbrown7.github.io/_Rmd/2022-06-29-evanbrown-third-blog-post.Rmd",
output_format = "github_document",
output_dir = "../_posts/",
output_options = list(
html_preview = FALSE
)
)
